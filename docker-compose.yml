version: "3.1"

services:

#   web-scraping:
#     build:
#       context: ./scraping
#     networks:
#       - aj_network 
  
   
  sql_db:
    image: mysql
    #restart: 'no'
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      #test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -ppassword123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - aj_network
  
  init_db:
    build:
      context: .
      dockerfile: sql_new/init_db/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_USER: 'root'
      MYSQL_HOST: ${MYSQL_HOST}
    depends_on:
      sql_db:
        condition: service_healthy
    networks:
      - aj_network

  mysql_api:
    build:
      context: .
      dockerfile: sql_new/api/Dockerfile
    ports: 
      - 8000:8000
    depends_on:
      sql_db:
        condition: service_healthy
      init_db:
        condition: service_completed_successfully
    networks:
      - aj_network
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:8000/status"]
      interval: 10s
      retries: 5
      start_period: 30s

  import_data_sql:
    build:
      context: .
      dockerfile: sql_new/import_data/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_USER: 'root'
      MYSQL_HOST: ${MYSQL_HOST}
      COMP_PATH: '/app/scraping'
    depends_on:
      sql_db:
        condition: service_healthy
      mysql_api:
        condition: service_healthy
    networks:
      - aj_network
  
  streamlit:
    build:
      context: .
      dockerfile: sql_new/visualizations/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: 'password123'
      MYSQL_HOST: 'sql_db'
    depends_on:
      sql_db:
        condition: service_healthy
      import_data_sql:
        condition: service_completed_successfully
    ports:
      - "8501:8501"
    networks:
      - aj_network


networks:
  aj_network:
